<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on JenkinsDev :: Into the mind of an aspiring polymathic autodidact</title><link>https://jenkinsdev.us/tags/git/</link><description>Recent content in git on JenkinsDev :: Into the mind of an aspiring polymathic autodidact</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 20 Sep 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://jenkinsdev.us/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>How to remove all files from Git LFS quickly.</title><link>https://jenkinsdev.us/posts/remove-all-files-from-git-lfs/</link><pubDate>Tue, 20 Sep 2022 00:00:00 +0000</pubDate><guid>https://jenkinsdev.us/posts/remove-all-files-from-git-lfs/</guid><description>Prerequisites A Git repo with files stored using Git LFS The BFG Repo Cleaner tool (requires java itself) Have a clean HEAD The BFG is a simpler, faster alternative to git-filter-branch for cleansing bad data out of your Git repository history&amp;hellip;
The One-Liner git lfs ls-files --all | awk &amp;#39;{split($0,a,&amp;#34; - &amp;#34;);l=split(a[2],b,&amp;#34;/&amp;#34;); print b[l]}&amp;#39; | xargs -d\\n -n1 java -jar ../bfg.jar -D &amp;amp;&amp;amp; \ git reflog expire --expire=now --all &amp;amp;&amp;amp; \ git gc --prune=now --aggressive What&amp;rsquo;s Happening?</description><content>&lt;h1 id="prerequisites">Prerequisites&lt;/h1>
&lt;ol>
&lt;li>A Git repo with files stored using &lt;a href="https://git-lfs.github.com/">Git LFS&lt;/a>&lt;/li>
&lt;li>The &lt;a href="https://rtyley.github.io/bfg-repo-cleaner/">BFG Repo Cleaner&lt;/a> tool (requires java itself)&lt;/li>
&lt;li>Have a clean &lt;a href="https://git-scm.com/book/en/v2/Git-Internals-Git-References#ref_the_ref">HEAD&lt;/a>&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>The BFG is a simpler, faster alternative to git-filter-branch for cleansing bad data out of your Git repository history&amp;hellip;&lt;/p>
&lt;/blockquote>
&lt;h1 id="the-one-liner">The One-Liner&lt;/h1>
&lt;pre tabindex="0">&lt;code>git lfs ls-files --all | awk &amp;#39;{split($0,a,&amp;#34; - &amp;#34;);l=split(a[2],b,&amp;#34;/&amp;#34;); print b[l]}&amp;#39; | xargs -d\\n -n1 java -jar ../bfg.jar -D &amp;amp;&amp;amp; \
git reflog expire --expire=now --all &amp;amp;&amp;amp; \
git gc --prune=now --aggressive
&lt;/code>&lt;/pre>&lt;h1 id="whats-happening">What&amp;rsquo;s Happening?&lt;/h1>
&lt;ol>
&lt;li>&lt;code>git lfs ls-files --all&lt;/code> -&amp;gt; list all files &amp;amp; hashes&lt;/li>
&lt;li>&lt;code>awk '{split($0,a,&amp;quot; - &amp;quot;);l=split(a[2],b,&amp;quot;/&amp;quot;); print b[l]}'&lt;/code> -&amp;gt; split the data to only get file names, since bfg does not work with paths&lt;/li>
&lt;li>&lt;code>xargs -d\\n -n1 java -jar ../bfg.jar -D&lt;/code> -&amp;gt; for each file emitted by awk, run bfg with &lt;code>--delete-files/-D&lt;/code> (removes the file)&lt;/li>
&lt;li>&lt;code>git reflog expire --expire=now --all&lt;/code> -&amp;gt; The &amp;ldquo;expire&amp;rdquo; subcommand prunes old reflog entries.&lt;/li>
&lt;li>&lt;code>git gc --prune=now --aggressive&lt;/code> -&amp;gt; &lt;a href="https://git-scm.com/docs/git-gc">&lt;code>git-gc&lt;/code>&lt;/a> cleans up unnecessary files and optimizes the local repository. &lt;code>--prune=now&lt;/code> prunes loose objects older than now (all loose), &lt;code>--aggressive&lt;/code> forces &lt;code>git-gc&lt;/code> to optimize &amp;ldquo;heavier&amp;rdquo;.&lt;/li>
&lt;/ol></content></item></channel></rss>